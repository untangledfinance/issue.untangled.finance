var w=Object.defineProperty;var q=(o,e,n)=>e in o?w(o,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[e]=n;var b=(o,e,n)=>q(o,typeof e!="symbol"?e+"":e,n);import{r as i,d as p}from"./index-BUY2Cjej.js";import{ai as g,ca as R,c4 as m}from"./vendor-WQejLG7Y.js";const f=o=>{if(!o)return o;const e={...o},n=[],r=Object.keys(e);return r.map(a=>{const t=n.indexOf(e[a]);t>=0&&(delete e[r[t]],n[t]=null),n.push(e[a])}),e},C=(o,e)=>{if(!o||!e)return o;const n=f(o);return e=f(e),Object.keys(e).map(a=>{const s=Object.keys(n).find(c=>c!==a&&n[c]===e[a]);s&&delete n[s],n[a]=e[a]}),n},d=o=>g(o,"DD/MM/YYYY").isValid()?g(o,"DD/MM/YYYY"):g(o),l={mintLATParam:"/api/v1/pool/:poolId/asset/mint-lat-param",bulkApproveLoanByApprover:"/api/v1/debt-order-contract/accept-external-debt-order-contract",approveBatchByApprover:"/api/v1/debt-batch/:batchId/approve",bulkRejectLoanByApprover:"/api/v1/debt-order-contract/reject-external-debt-order-contract",bulkMintLoansByOriginator:"/api/v1/debt-order-contract/minted-external-debt-order-contract",bulkTransferToPoolLoansByOriginator:"/api/v1/debt-order-contract/transfered-external-debt-order-contract",bulkFinancedLoansByOriginator:"/api/v1/debt-order-contract/financed-external-debt-order-contract",bulkUpdateAssets:"/api/v1/external/bulk-update",uploadLendingAssets:"/api/v1/pool/:poolId/asset/upload-lending-collaterals",drawdown:"/api/v3/debt/tx-hash/:tx?type=3",getDebtOrderById:"/api/v1/debt-order/:id",getDebtOrderContractById:"/api/v1/debt-order-contract/:id",getLoanHistory:"/api/v1/debt-order-contract/:debtOrderContractId/history",signCollateralDoc:"/api/v3/:poolId/collateral-legal-document/submit"};class L{constructor(){b(this,"makeFormDataForBulkUpload",(e,{countries:n})=>{const r=t=>t?t.replaceAll(",","").trim():null;return e.map(t=>{const s=d(t.startedDate),c=d(t.finalMaturityDate),A=c.diff(s,"days"),D=t.businessType&&t.businessType<4,I=n.find(y=>t.country===y.isoCode);let u=I?I.id:t.country;u==="UK"&&(u=134),u==="CS"&&(u=196);const v={termInDays:A||null,isDebtorBusiness:D||null,startedDate:t.startedDate?s.toISOString():null,debtorEmail:t.debtorEmail||null,principalAmount:r(t.principalAmount),outstandingPrincipalAmount:r(t.outstandingPrincipalAmount),currencySymbol:t.currencySymbol||null,interestRatePercentage:t.interestRatePercentage||null,liquidationRatio:t.liquidationRatio||null,minCollateralRatio:t.minCollateralRatio||null,poolCutoffDate:t.poolCutoffDate?d(t.poolCutoffDate).toISOString():null,poolIdentifier:t.poolIdentifier||null,loanIdentifier:t.loanIdentifier||null,originator:t.originator||null,servicerIdentifier:t.servicerIdentifier||null,servicerName:t.servicerName||null,borrowerIdentifier:t.borrowerIdentifier||null,country:u,postcode:t.postcode||null,businessType:t.businessType||null,borrowerSegment:t.borrowerSegment||null,originatorAffiliate:t.originatorAffiliate||null,assetType:t.assetType||null,seniority:t.seniority||null,LGD:t.LGD||null,NACEIndustryCode:t.NACEIndustryCode||null,securitisedLoanAmount:r(t.securitisedLoanAmount),typeOfLoan:t.typeOfLoan||null,interestPaymentFrequency:t.interestPaymentFrequency||null,amortizationType:t.amortizationType||null,balloonAmount:r(t.balloonAmount),paymentType:t.paymentType||null,interestCapRate:t.interestCapRate||null,interestFloorRate:t.interestFloorRate||null,interestRateType:t.interestRateType||null,currentInterestRateIndex:t.currentInterestRateIndex||null,currentInterestRateMargin:t.currentInterestRateMargin||null,interestResetPeriod:t.interestResetPeriod||null,interestArrearsAmount:r(t.interestArrearsAmount),numberOfDaysInInterestArrears:t.numberOfDaysInInterestArrears||null,principalArrearsAmount:r(t.principalArrearsAmount),numberOfDaysInPrincipalArrears:t.numberOfDaysInPrincipalArrears||null,defaultDate:t.defaultDate?d(t.defaultDate).toISOString():null,defaultAmount:r(t.defaultAmount),cumulativeRecoveries:t.cumulativeRecoveries||null,allocatedLosses:t.allocatedLosses||null,dateLossAllocated:t.dateLossAllocated?d(t.dateLossAllocated).toISOString():null,finalMaturityDate:t.finalMaturityDate?c.toISOString():null,principalPaymentFrequency:t.principalPaymentFrequency||null,loanHedged:t.loanHedged||null,riskscore:t.riskscore||null};return R(v,y=>y!==null)})})}async getMintLATParam(e,n){const a=await(await i.getRequestInstance()).post(l.mintLATParam.replace(":poolId",e),{...n,chainId:p.chainId}),{data:t}=a;return t}async bulkApproveLoansByApprover(e){const n=await i.getRequestInstance(),r=l.bulkApproveLoanByApprover,a=await n.put(r,e),{data:t}=a;return t}async approveBatchByApprover(e,n){const r=await i.getRequestInstance(),a=l.approveBatchByApprover.replace(":batchId",e),t=await r.put(a,n),{data:s}=t;return s}async bulkRejectLoanByApprover(e){const n=await i.getRequestInstance(),r=l.bulkRejectLoanByApprover,a=await n.put(r,e),{data:t}=a;return t}async bulkMintLoansByOriginator(e){const n=await i.getRequestInstance(),r=l.bulkMintLoansByOriginator,a=await n.put(r,e),{data:t}=a;return t}async bulkTransferToPoolLoansByOriginator(e){const n=await i.getRequestInstance(),r=l.bulkTransferToPoolLoansByOriginator,a=await n.put(r,e),{data:t}=a;return t}async bulkFinancedLoansByOriginator(e){const n=await i.getRequestInstance(),r=l.bulkFinancedLoansByOriginator,a=await n.put(r,e),{data:t}=a;return t}async drawDownByTxHash(e){const n=await i.getRequestInstanceV3(),r=l.drawdown.replace(":tx",e),a=await n.get(r),{data:t}=a;return t}async bulkUpdate(e){const r=await(await i.getRequestInstance()).put(l.bulkUpdateAssets,e),{data:a}=r;return a}async signCollateralDoc(e,n){const a=await(await i.getRequestInstanceV3()).post(l.signCollateralDoc.replace(":poolId",e),n),{data:t}=a;return t}async bulkUploadTransfer(e,n){const r=await i.getRequestInstance();n.chainId=p.chainId;const a=await r.post(l.uploadLendingAssets.replace(":poolId",e),n),{data:t}=a;return t}async getLoanHistory(e){const n=await i.getRequestInstance(),r=l.getLoanHistory.replace(":debtOrderContractId",e),a=await n.get(r),{data:t}=a;return t}async getDebtOrderContractById(e){const n=await i.getRequestInstance(),r=l.getDebtOrderContractById.replace(":id",e),a=await n.get(r+`?${m.stringify({filter:{chainId:p.chainId}})}`,{}),{data:t}=a;return t}async getDebtOrderById(e){const n=await i.getRequestInstance(),r=l.getDebtOrderById.replace(":id",e),a=await n.get(r+`?${m.stringify({filter:{chainId:p.chainId}})}`,{}),{data:t}=a;return t}}const h=new L;export{C as a,h as d,f as r};
