const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-YDRpzjTi.js","assets/vendor-WQejLG7Y.js","assets/index-BUY2Cjej.js","assets/index-DudN4ZLF.css"])))=>i.map(i=>d[i]);
var w=Object.defineProperty;var F=(r,t,e)=>t in r?w(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var g=(r,t,e)=>F(r,typeof t!="symbol"?t+"":t,e);import{h as H,ah as I,_ as R,aj as l,ar as D,cf as B,ai as T,aZ as G,S as P,cg as p}from"./vendor-WQejLG7Y.js";import{d as C,j as O,e as y,f as _,m as W,p as X,k as U}from"./index-BUY2Cjej.js";import{a as k,b as L}from"./app-q0ws3Yx0.js";import{f as b,i as v,d as Y,u as z}from"./index-YDRpzjTi.js";class ${async getSafeWalletTransaction(t){const e=`${C.safeUrl}/api/v1/multisig-transactions/`,n=await H.get(`${e}${t}`),{data:o}=n;return o}}const K=new $,Q=["servicerName"],f={$and:function(r,t){if(!Array.isArray(t))throw Error("Constraint of $and must be an array");for(let e=0;e<t.length;e++)if(!M(r,t[e]))return!1;return!0},$or:function(r,t){if(!Array.isArray(t))throw Error("Constraint of $or must be an array");for(let e=0;e<t.length;e++)if(M(r,t[e]))return!0;return!1},$not:function(r,t){if(Array.isArray(t)){for(let e=0;e<t.length;e++)if(M(r,t[e]))return!1;return!0}else return r!=t},$gte:function(r,t){return r>=t},$lte:function(r,t){return r<=t},$gt:function(r,t){return r>t},$lt:function(r,t){return r<t},$ne:function(r,t){return r!=t},$eq:function(r,t){return r==t},$in:function(r,t){return t.includes(r)}};function M(r,t){if(typeof t!="object")throw Error("Conditions must be an object");if(Array.isArray(t))throw Error("Conditions can not be an array");const e=Object.keys(t);for(let n=0;n<e.length;n++)if(!j(r,e[n],t[e[n]]))return!1;return!0}function j(r,t,e){const n=Q.includes(t)?r.debtOrderContractInfo[t]:r[t];if(f[t])return f[t](r,e);if(typeof e=="object"){const o=Object.keys(e);for(let a=0;a<o.length;a++){const i=o[a];if(!f[i])throw Error("Invalid operator");if(!f[i](n,e[i]))return!1}return!0}else return n==e}const x=function(r,t){if(t){const e=function(n){return M(n,t)};r=r.filter(e)}return r},ot=async(r,t,e)=>{let n=null;for(;n==null||(n==null?void 0:n.result)===null||(n==null?void 0:n.result)==="notfound";)n=await r(...t),((n==null?void 0:n.result)===null||(n==null?void 0:n.result)==="notfound")&&await new Promise(o=>setTimeout(o,e));return n},Z=async(r,t,e)=>{let n=null;for(;n==null||(n==null?void 0:n.transactionHash)===null;)n=await r(...t),(n==null?void 0:n.transactionHash)===null&&await new Promise(o=>setTimeout(o,e));return n};class q{constructor(){g(this,"checkIsMappingValue",t=>L.poolDocumentFields.some(e=>e.id===t));g(this,"waitForTransactionReceipt",async(t,e)=>{try{if(e==="safe"){const n=await Z(K.getSafeWalletTransaction,[t],5e3);return await p(U,{hash:n.transactionHash})}else return await p(U,{hash:t})}catch(n){throw console.error("Error processing transaction:",n),n}})}getWalletLink(t){return`${C.explorerUrl}/address/${t}`}async getAssetsValue(t,e){if(!t.poolContractAddress)return 0;isNaN(e)&&(e=I(t,"currency.decimals",2));const{abi:n}=await R(async()=>{const{abi:a}=await import("./index-YDRpzjTi.js").then(i=>i.S);return{abi:a}},__vite__mapDeps([0,1,2,3]));return new O.eth.Contract(n,C.contracts.SecuritizationPoolValueService).methods.getExpectedAssetsValue(t.poolContractAddress).call().then(a=>l(D(a,e),2))}async getPoolReserve(t,e){return t.poolContractAddress?(isNaN(e)&&(e=I(t,"currency.decimals",2)),(await b(t.poolContractAddress)).methods.reserve().call().then(o=>l(D(o,e),2))):0}async getPoolBalance(t){return t.poolContractAddress?Promise.all([this.getPoolReserve(t),this.getAssetsValue(t)]).then(e=>B(e)).catch(()=>{}):0}async getVaultTotalValueLocked(t,e){return t.vaultContractAddress?(isNaN(e)&&(e=I(t,"currency.decimals",6)),(await v(t.vaultContractAddress)).methods.totalAssets().call().then(o=>l(D(o,e),2))):0}async getVaultModules(t,e){return t.vaultContractAddress?(await v(t.vaultContractAddress)).methods.getModules().call():0}async getMultiNoteTokenAssetsBalance(t){const{abi:e}=await R(async()=>{const{abi:n}=await import("./index-YDRpzjTi.js").then(o=>o.S);return{abi:n}},__vite__mapDeps([0,1,2,3]));return Promise.all(t.map(async n=>new O.eth.Contract(e,C.contracts.SecuritizationPoolValueService).methods["calcCorrespondingAssetValue(address,address,uint256)"](n.noteTokenAddress,n.investor,T().unix()).call().then(({principal:a,interest:i})=>({principal:l(+a/100,2),interest:l(+i/100,2)}))))}async getLoanAndInvoiceAssetsValues(t,e){if(!G(t))return[];const{abi:n}=await R(async()=>{const{abi:s}=await import("./index-YDRpzjTi.js").then(u=>u.S);return{abi:s}},__vite__mapDeps([0,1,2,3])),o=new O.eth.Contract(n,C.contracts.SecuritizationPoolValueService);let a=[];try{const s=await o.methods.getExpectedAssetValues(e.poolContractAddress,t.map(u=>u.tokenId)).call();a=y(s),console.log("--->result",a,e)}catch(s){console.log(s)}const i=a.map(s=>l(+s/10**e.currency.decimals,e.currency.decimals));let A=0;return console.log("currentNAV: ",i),t.map(s=>s.tokenId?i[A++]:0)}async getDebtAssetValues(t,e,n=!1,o){return(await(await Y()).methods.getDebtAssetValues(t,e.map(s=>s.tokenId)).call()).map(s=>n?new P(s).dividedBy(new P(10).pow(o).toNumber()).toNumber():new P(s))}async getDebtAssetValue(t,e,n){const o=await b(t);try{const a=await o.methods.debt(e).call();return _(a,n)}catch(a){console.log(a)}}async getLoanAndInvoiceInterestRates(t,e){const{abi:n}=await R(async()=>{const{abi:s}=await import("./index-YDRpzjTi.js").then(u=>u.S);return{abi:s}},__vite__mapDeps([0,1,2,3])),o=new O.eth.Contract(n,C.contracts.SecuritizationPoolValueService),a=t.map(s=>s.tokenId).filter(s=>s);console.log("getAssetInterestRates",{poolContractAddress:e.poolContractAddress,tokenIds:a});const i=await o.methods.getAssetInterestRates(e.poolContractAddress,a).call().then(s=>y(s).map(u=>l(+u/1e4,2)));let A=0;return console.log("interestRates",i),t.map(s=>s.tokenId?i[A++]:0)}getExtraInfoFromAssets(t,e){return this.getExtraInfoFromLoans(this.getEligibleAssetsInPool(t,e))}getEligibleAssetsInPool(t,e){try{const n=[...I(t,"ineligibleFilter",[]),...I(t,"reserveFilter",[])];return x(e||(I(t,"assetType")===k.LENDING?t.assets:t.invoiceAssets),n.length?{$not:n.map(o=>o.poolFilterConditions)}:{})}catch{return null}}getExtraInfoFromLoans(t){let e=0,n=0,o=0,a=0;const i=new Array(t==null?void 0:t.length).fill(0);t&&t.forEach((c,E)=>{const N=!!c.id,d=I(c,"debtOrderContract.startedAt"),V=I(c,"debtOrderContract.termInDays");N?c.tokenId&&(a++,i[E]=+c.outstandingPrincipalAmount,e+=i[E],i[E]&&(n+=c.interestRatePercentage,o+=T(T(d).add(V,"days")).diff(T(d),"months"))):(a++,e+=+c.outstandingPrincipalAmount,n+=+c.interestRate,o+=T(T(d).add(V,"days")).diff(T(d),"months"),i[E]=+c.outstandingPrincipalAmount)}),e=l(e,2),i.sort((c,E)=>E-c);let A=0,s=0;for(;s<5&&i[s];)A+=i[s],s++;const u=l(A/e*100,2),m=a?l(e/a,2):0,h=a?l(n/a,2):0,S=a?l(o/a,2):0;return{outstandingAmount:e,averageOutstandingAmount:m,weightedAverageAPY:h,averageTerm:S,topFiveConcentration:u}}getVariablesFromFormula(t){const e=["DATE","DATEVALUE","DAY","DAYS","DAYS360","EDATE","EOMONTH","HOUR","MINUTE","ISOWEEKNUM","MONTH","NETWORKDAYS","NETWORKDAYSINTL","NOW","SECOND","TIME","TIMEVALUE","TODAY","WEEKDAY","YEAR","WEEKNUM","WORKDAY","WORKDAYINTL","YEARFRAC","ACCRINT","CUMIPMT","CUMPRINC","DB","DDB","DOLLARDE","DOLLARFR","EFFECT","FV","FVSCHEDULE","IPMT","IRR","ISPMT","MIRR","NOMINAL","NPER","NPV","PDURATION","PMT","PPMT","PV","RATE","BIN2DEC","BIN2HEX","BIN2OCT","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","COMPLEX","CONVERT","DEC2BIN","DEC2HEX","DEC2OCT","DELTA","ERF","ERFC","GESTEP","HEX2BIN","HEX2DEC","HEX2OCT","IMABS","IMAGINARY","IMARGUMENT","IMCONJUGATE","IMCOS","IMCOSH","IMCOT","IMCSC","IMCSCH","IMDIV","IMEXP","IMLN","IMLOG10","IMLOG2","IMPOWER","IMPRODUCT","IMREAL","IMSEC","IMSECH","IMSIN","IMSINH","IMSQRT","IMSUB","IMSUM","IMTAN","OCT2BIN","OCT2DEC","OCT2HEX","AND","false","IF","IFS","IFERROR","IFNA","NOT","OR","SWITCH","true","XOR","ABS","ACOS","ACOSH","ACOT","ACOTH","AGGREGATE","ARABIC","ASIN","ASINH","ATAN","ATAN2","ATANH","BASE","CEILING","CEILINGMATH","CEILINGPRECISE","COMBIN","COMBINA","COS","COSH","COT","COTH","CSC","CSCH","DECIMAL","ERF","ERFC","EVEN","EXP","FACT","FACTDOUBLE","FLOOR","FLOORMATH","FLOORPRECISE","GCD","INT","ISEVEN","ISOCEILING","ISODD","LCM","LN","LOG","LOG10","MOD","MROUND","MULTINOMIAL","ODD","POWER","PRODUCT","QUOTIENT","RADIANS","RAND","RANDBETWEEN","ROUND","ROUNDDOWN","ROUNDUP","SEC","SECH","SIGN","SIN","SINH","SQRT","SQRTPI","SUBTOTAL","SUM","SUMIF","SUMIFS","SUMPRODUCT","SUMSQ","SUMX2MY2","SUMX2PY2","SUMXMY2","TAN","TANH","TRUNC","AVEDEV","AVERAGE","AVERAGEA","AVERAGEIF","AVERAGEIFS","BETADIST","BETAINV","BINOMDIST","CORREL","COUNT","COUNTA","COUNTBLANK","COUNTIF","COUNTIFS","COUNTUNIQUE","COVARIANCEP","COVARIANCES","DEVSQ","EXPONDIST","FDIST","FINV","FISHER","FISHERINV","FORECAST","FREQUENCY","GAMMA","GAMMALN","GAUSS","GEOMEAN","GROWTH","HARMEAN","HYPGEOMDIST","INTERCEPT","KURT","LARGE","LINEST","LOGNORMDIST","LOGNORMINV","MAX","MAXA","MEDIAN","MIN","MINA","MODEMULT","MODESNGL","NORMDIST","NORMINV","NORMSDIST","NORMSINV","PEARSON","PERCENTILEEXC","PERCENTILEINC","PERCENTRANKEXC","PERCENTRANKINC","PERMUT","PERMUTATIONA","PHI","POISSONDIST","PROB","QUARTILEEXC","QUARTILEINC","RANKAVG","RANKEQ","RSQ","SKEW","SKEWP","SLOPE","SMALL","STANDARDIZE","STDEVA","STDEVP","STDEVPA","STDEVS","STEYX","TDIST","TINV","TRIMMEAN","VARA","VARP","VARPA","VARS","WEIBULLDIST","ZTEST","CHAR","CLEAN","CODE","CONCATENATE","EXACT","FIND","LEFT","LEN","LOWER","MID","NUMBERVALUE","PROPER","REGEXEXTRACT","REGEXMATCH","REGEXREPLACE","REPLACE","REPT","RIGHT","ROMAN","SEARCH","SPLIT","SUBSTITUTE","T","TRIM","UNICHAR","UNICODE","UPPER"],n=["principalAmount","outstandingPrincipalAmount","interestRatePercentage"];L.calculationFieldsForInvoices.forEach(a=>n.push(a.value)),L.calculationFieldsForSMELoans.forEach(a=>n.push(a.value));const o=[];return t.replace(/([a-zA-Z_-]{1,})/g,function(a,i){return!e.includes(i)&&!n.includes(i)&&o.push(i),i}),o}async generateLATMintPayload(t,e){const n=await W(),o=await X(),a=o.chainId,i=await z(),A={name:"UntangledLoanAssetToken",version:"0.0.1",chainId:a,verifyingContract:C.contracts.LoanAssetToken},s=await Promise.all(t.map(S=>i.methods.nonce(S).call().then(c=>c.toString()))),m=[n,JSON.stringify({domain:A,message:{tokenIds:t,nonces:s,validator:e},primaryType:"LoanAssetToken",types:{EIP712Domain:[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],LoanAssetToken:[{name:"tokenIds",type:"uint256[]"},{name:"nonces",type:"uint256[]"},{name:"validator",type:"address"}]}})];return{validateSignature:await new Promise((S,c)=>{o.sendAsync({method:"eth_signTypedData_v4",params:m,from:n},function(E,N){E?c(E):N.error?c(N.error):S(N.result)})}),tokenIds:t,nonces:s,validator:e}}}const st=new q;export{ot as c,st as u};
